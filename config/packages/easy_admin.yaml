easy_admin:
    site_name: '<img src="/img/logo_1office_GB_H.svg" width="150" height="50" alt="1Office">'
    formats:
        date: 'Y-m-d'
        datetime: 'Y-m-d H:i'
    design:
        brand_color: '#98c93c'
        assets:
            css:
                - 'css/admin.css'
            favicon:
                path: '/img/Favicon_-_1Office.png'
                mime_type: 'image/png'
        menu:
            - { entity: 'SyncRecord', default: true }
            - Job
            - User
            - CachedSyncObject
#        templates:
#            field_boolean: ''
    entities:
        CachedSyncObject:
            class: App\Entity\CachedSyncObject
            label: Synched records
            disabled_actions: ['new']
        User:
            class: App\Entity\User
            label: Users
            new:
                fields:
                    - enabled
                    - username
                    - email
                    - { type: 'section', columns: 12, label: 'password'}
                    - { property: 'plainPassword', type: 'repeated', required: true, type_options: { type: Symfony\Component\Form\Extension\Core\Type\PasswordType, required: false, first_options: { label: Password }, second_options: { label: 'Repeat password' } } }
#                    - groups
#                    - roles
            edit:
                fields:
                    - enabled
                    - username
                    - email
                    - { type: 'section', columns: 12, label: 'Password'}
                    - { property: 'plainPassword', type: 'repeated', required: false, type_options: { type: Symfony\Component\Form\Extension\Core\Type\PasswordType, required: false, first_options: { label: Password }, second_options: { label: 'Repeat password' } } }
#                    - groups
            list:
                fields: ['id', 'username', 'email', 'enabled', 'lastLogin']
        Job:
            class: App\Entity\Job
            label: 'Logs'
            disabled_actions: ['new', 'delete']
        SyncRecord:
            class: App\Entity\SyncRecord
            label: 'Synchronization records'
            form:
                fields:
                    - { type: 'section', columns: 12, label: 'General'}
                    - name
                    - active
                    - { type: 'section', columns: 6, label: 'Smart accounts API'}
                    - smartAccountsApiKeyPublic
                    - smartAccountsApiKeyPrivate
                    - { type: 'section', columns: 6, label: 'TransferWise API'}
                    - transferWiseApiToken
                    - { property: 'transferWiseApiEnvironment', label: 'Production environment'}
            list:
                actions:
                    - { type: 'route', name: 'sync_record_run', icon: 'play-circle', label: 'Run'}
                fields: ['id', 'name', 'active', { property: 'transferWiseApiEnvironment', label: 'Production environment'}, 'created', 'updated']
            search:
                fields: ['id', 'name']
            new:
                fields: ['name', 'smartAccountsApiKeyPublic', 'smartAccountsApiKeyPrivate', 'transferWiseApiToken', 'active']
            edit:
                fields: ['name', 'smartAccountsApiKeyPublic', 'smartAccountsApiKeyPrivate', 'transferWiseApiToken', 'active']
